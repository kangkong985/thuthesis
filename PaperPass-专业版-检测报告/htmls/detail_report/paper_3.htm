<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PaperPass 最权威论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
html
{
overflow-x:hidden;
overflow-y:auto;
}
body,td,th {
font-family: "微软雅黑";
font-size: 12px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
p{
margin-bottom:10px;
}
demo_padding {
line-height: 30px;
}
.zhengwen {
padding-right: 15px;
padding-left: 5px;
padding-bottom:100px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px solid #999999;
padding-right: 10px;
padding-left: 10px;
margin-top:10px;
margin-left:25px;
width:300px;
}
.shubu{
height: 20px;
width: 20px;
margin-left:25px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
color: #666666;
}
a.red:link {color:#FF0000}
a.red:visited {color:#FF0000}
a.red:hover {color:#000000}
a.red:active {color:#000000}

a.orange:link {color:#FF6600}
a.orange:visited {color:#FF6600}
a.orange:hover {color:#000000}
a.orange:active {color:#000000}

a.dark:link {color:#666666}
a.dark:visited {color:#666666}
a.dark:hover {color:#000000}
a.dark:active {color:#000000}

a.pagelink:hover {color:#000000}
a.pagelink:active {color:#000000}

.green{color:#008000}
.gray{color:#666666}
.red{color:#FF0000}
.orange{color:#FF6600}
a{TEXT-DECORATION:none}

-->
</style>
</head>
<body>


<div class="zhengwen">
<div>
<span style="margin-left:25px"></span>
[
<a class="pagelink" href="paper_1.htm">首页</a>
<a class="pagelink" href="paper_2.htm">上一页</a>
<a class="pagelink" href="paper_4.htm">下一页</a>
<a class="pagelink" href="paper_11.htm">尾页</a>
页码：3/11页
]
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">75</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>第2章 相关工作</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">76</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>Video Multicast over Wireless Mesh Networks with Scalable Video Coding( SVC)]文章[17]中，</span><a href='../sentence_detail/195.htm' target='right' class='orange' >作者 Xiaoqing Zhu等人致力于优化无线 Mesh网络中视频多播场景下的速率分配问题。</a><span class='green'>构建了一个综合无线链路容量各向异性、相邻链路竞争、不同视频的误码率特征等的优化框架，</span><span class='green'>并提出了一种分布式的速率分配方案来最小化整体网络中传输视频的误码率，</span><span class='green'>而不给网络带来额外的网络开销。</span><a href='../sentence_detail/199.htm' target='right' class='orange' >仿真显示该方 案要显著优于基于 TCP 的启发式算法。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">77</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>另外，随着今年多无线模块的无线产品越来约普及，围绕多无线模块的性能 优化也吸引了很多的研究工作[18][19]。</span><span class='green'>文章[20] [21][22]等通过不同的角度设计了不同 的跨层方案试图整体上提升 Mesh 视频传输网络的性能。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">78</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>2.6 移动场景下的无线 Mesh 网络 QoS 保障相关研究</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">79</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>E.</span><span class='green'>M. Royer和 Chai- Keong Toh在1999年发表的文章[23]当时主流的几种移动 adhoc网络协议做了对比研究，</span><span class='green'>并提出了移动 Mesh网络的几点主要的衡量指标，包括 QoS、性能、延时等。</span><span class='green'>之后关于移动 adhoc 网络的研究蔚然成风，吸引了很多 研究者投入进来。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">80</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/207.htm' target='right' class='orange' >文章[24] 提出了广播风暴在移动 adhoc 网络中的危害。</a><span class='green'>广播技术在网络中是一 种常见的可以协助解决很多问题的技术。</span><span class='green'>但是在移动 adhoc 网络中，因为网络设备 的移动性，广播的频率会成倍放大以适应网络的动态变化。</span><a href='../sentence_detail/210.htm' target='right' class='orange' >而因为无线信道的开 放性，高频率的广播会占用额外的带宽资源。</a><span class='green'>文章中，作者提出了一些方法来减 少冗余的广播数据，并且差异化重广播的时间点，从而减轻了广播风暴的影响。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">81</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>Lee 等人在文章[25] 中提出了一种基于 IP 的 QoS 框架 INSIGNIA，以支持移动 adhoc 网络中的适应性服务。</span><span class='green'>该框架基于 IP 网络的灵活性、鲁棒性、可扩性设计 INSIGNIA，使之能够支持快速回复、端到端适应等特性。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">82</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>文章[26] 聚焦于延时限制的拓扑通知问题，将延时和干扰相结合。</span><a href='../sentence_detail/215.htm' target='right' class='orange' >并基于此提 出了一种分布式跨层算法。</a><span class='green'>进一步的，作者还将节点移动性对控制算法的影响纳 入了考虑，删除了一些不问定的拓扑链接。</span><span class='green'>仿真结果显示，该算法相对于 AODV [2] 可以取得 50% 以上的性能提升。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">83</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>在移动链路稳定性、无缝漫游、链路容量等方面也积累了很多的研究工作 [27] [28] [29] [30] [31]。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">84</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>3.1 项目描述</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">85</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/220.htm' target='right' class='orange' >本项目旨在构建一套稳定、健壮、大规模的无线 Mesh 网络基础设施，以支持 大量的实时监控视频数据传输。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">86</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>项目基于的硬件平台为 Mikrotik RB411 U电路板，该电路板搭载 Athros AR7130处理器，</span><span class='green'>工作频率300 MHz，内存32 M，天线为 Broadcom，工作在5 GHz频段，增益12 dBi。</span><span class='green'>该硬件平台正常通信范围为 3 5km。</span><span class='green'>另外，配置 Atheros AR9220 无线模 块，该模块对 EDCA 的队列机制提供硬件级支持。</span><span class='green'>节点另外设计有封装外壳，防 水防爆，以适应不同的工业应用场景。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">87</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>节点运行的操作系统为 OpenWRT 系统。</span><a href='../sentence_detail/227.htm' target='right' class='orange' >基于 Linux2.4.30 内核，专业设计用 于嵌入式无线网络设备。</a><span class='green'>开发系统为 Ubuntu12.04，编译工具基于 OpenWRT 提供 的相应硬件平台的编译环境配置，引入 BATMAN-adv 路由协议的包。</span><span class='green'>所有使用的 软件系统均来自开源项目。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">88</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>实验章节中使用公开的视频序列[32] 和普通的 D-link 摄像头获取视频图像。</span><span class='green'>3.2 BATMAN-adv 路由协议</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">89</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>为了深入研究项目的 Mesh 网路特点，并进行深度开发，有必要首先理解 Mesh 网络核心协议 BATMAN-adv 的技术原理。</span><span class='green'>BATMAN-adv 协议支持 Mesh 网络的自 组网和数据路由两大核心功能。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">90</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>3.2.1 数据包类型</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">91</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>BATMAN-adv 协议定义了六种不同的数据包类型，用于网络的路由构建、数 据包传输以及网络拓扑可视化。</span><span class='green'>网络中的节点称为 Originator。</span><span class='green'>这里首先对每一种 数据包类型做描述。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">92</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>Originator Messages 通常简称为 OGMs，为 BATMAN-adv 协议的核心数据 包。</span><a href='../sentence_detail/239.htm' target='right' class='orange' >它用于发现网络中的节点，每个节点通过周期性的广播 OGMs 申明自己的存 在，以加入网络。</a><span class='green'>3.1节点广播 OGMs，邻居节点接收到后更新自身的路由表并重 广播出去，这样两个相互无法直接沟通的节点就能够知道彼此的存在，从而构建 有效的多跳通信路由。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">93</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/241.htm' target='right' class='orange' >图 3.1 OGMs 传播示意图，A 点广播 OGM，接受节点更新路由表并转发该 OGM</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">94</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>OGMs 的存在主要服务于两个目的:</span><a href='../sentence_detail/243.htm' target='right' class='orange' >1)申明节点的存在，以及到达申明节点 的可能的下一跳节点。</a><a href='../sentence_detail/244.htm' target='right' class='orange' >2)测量链路的质量，通过多跳重广播积累路径的整体质量。</a><span class='green'>后续会详细描述。</span><span class='green'>OGM 包中包含如下信息:</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">95</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>• Originator地址-用于鉴别生成该OGM的原始节点。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">96</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>• 序列号-用于链路质量度量和重复包检测。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">97</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>• 传输质量 (TQ) -描述到达 Originator 的整条路径的链路质量。</span><span class='green'>• 前驱节点地址-用于检测并丢弃以广播出去的 OGM。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">98</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>• TTL-用于限制OGM的最大传输跳数。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">99</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>• 网关标识-用于标识接入外网的节点。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">100</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>因特网控制报文 (Internet Control Message Packet) 简称 ICMP，用以支持一部 分由 IP 版本的 ICMP 提供的特征。</span><span class='green'>因为 BATMAN-adv 运行再 mac 层，因此网络 中的节点不能够通过 IP 地址到达，因此协议提供了 mac 地址到 ip 地址的映射机 制，并基于此设计了 mac 地址版本的 ping 工具。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">101</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>单播包 (Unicast Packet) 单播数据包封装来自上层的单播数据。</span><span class='green'>除了上层数据 本身，单播包还在包头中添加目的地址和 TTL 字段。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">102</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>分拆单播包 (Fragmented Unicast Packet) 碎片化单播数据包。</span><span class='green'>BATMAN-adv 封装来自上层的数据，可能超出 mac 层 MTU 长度的限制，这就导致数据包需要被 碎片化并在终点重新聚合。</span><span class='green'>碎片化单播数据包除了分拆的数据外，还需要在包头 添加序号用以聚合，并添加 originator 的标识和碎片末尾标识。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">103</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/260.htm' target='right' class='orange' >广播数据包 (Broadcast packet) 广播包用于向全网所有节点广播数据。</a><a href='../sentence_detail/261.htm' target='right' class='orange' >除了数 据部分，包头还包含序列号，源节点地址和 TTL。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">104</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/262.htm' target='right' class='orange' >可视化数据包 (Visualization packets) 可视化数据包用于支持动态的图形化网 络拓扑。</a><span class='green'>用户需要先设定其中一个节点为服务器，服务器节点会向网络中其他节 点发送可视化数据包，搜集其他节点的信息，从而构建出整体网络的拓扑图。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">105</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>3.2.2 节点发现</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">106</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>如前所述，BATMAN-adv 协议中所有节点会周期性的向其他节点广播 OGMs， 当一个节点接收到 OGM 后，会做如下处理:</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">107</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>检查该 OGM 包中的 originator 是否为自身，如果是，则发送者为直接邻居， 路由表做相应更新。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">108</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/267.htm' target='right' class='orange' >检查该 OGM 包的前一跳发送节点是否为自身，如果是，表示该 OGM 已经 处理过，直接丢弃。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">109</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/268.htm' target='right' class='orange' >检查 originator 是否已经在路由表中存在，如果否，创建该路由表项。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">110</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>更新到达 originator 的路由表项。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">111</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>跟新 TQ 和 TTL 值，重广播该 OGM。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">112</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>在此基础上，还会对路由循环和重复 OGM 做检查。</span><span class='green'>3.2.3 链路质量估计</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">113</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>TQ 值是用以估算链路质量的核心度量值，在 OGM 的传输过程中，TQ 值逐 跳计算并累计。</span><span class='green'>TQ 值实际上描述了数据包在该链路上按预期到达的概率。</span><span class='green'>该值存 储为一个 8 位的值，大小位 0-255。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">114</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图 3.2 计算 TQ</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">115</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>接收质量定义为 RQ。</span><a href='../sentence_detail/278.htm' target='right' class='orange' >如图 3.2，节点 B 发送 OGM 并被节点 A 接收到，A 点 根据来自 B 的 OGM 序列号计算从 B 到达 A 的单向链路 RQ。</a><span class='green'>该过程通过一个大 小为 N 的滑动窗口(默认大小 128)实现，在该滑动窗口中将纪录从最后接收到 的 OGM 的序列号向前推 N 个对应的 OGM。</span><a href='../sentence_detail/280.htm' target='right' class='orange' >RQ 值即为滑动窗口内序列号对应的 OGM 中实际接收到的比例。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">116</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>回程质量定义为 EQ。</span><a href='../sentence_detail/282.htm' target='right' class='orange' >节点 A 发出的 OGM 到达 B 后，B 会重广播该 OGM，A 在此收到该 OGM 即可计算链路的回程质量。</a><span class='green'>计算类同 RQ，同样通过一个纪录序 列号的滑动窗口实现。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">117</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>传输质量定义位 TQ。</span><a href='../sentence_detail/285.htm' target='right' class='orange' >传输质量指代数据包从节点 A 发出，被节点 B 正确接 收的概率。</a><a href='../sentence_detail/286.htm' target='right' class='orange' >因为 EQ 定义为数据包双向回程正确接收的概率，RQ 定义为链路反向</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">118</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>第3章 项目设计 的正确接收概率，由此即可计算 A 点到 B 点的链路传输质量 TQ:</span>
</p>
</div>


<div>
<span style="margin-left:25px"></span>
[
<a class="pagelink" href="paper_1.htm">首页</a>
<a class="pagelink" href="paper_2.htm">上一页</a>
<a class="pagelink" href="paper_4.htm">下一页</a>
<a class="pagelink" href="paper_11.htm">尾页</a>
页码：3/11页
]
</div>

<br>
<div style="margin-left:8px">

<div style="text-align:center;background-color:#CA122C;margin-top:30px;overflow:hidden;">
<a href="http://www.paperpass.com/publish/index?from=ppreport_banner" target="_blank" style="display:block;"><img height="180" src="http://file.paperpass.com/images/fabiao.jpg"></a>
</div>

</div>
</div>


<div class="zhengwencenter">
<p>
检测报告由<a href="http://www.paperpass.com/" target="_blank">PaperPass</a>文献相似度检测系统生成
</p>
<p>
Copyright © 2007-2016 PaperPass
</p>
</div>
<div style="margin-bottom:400px"></div>
</body>
</html>
